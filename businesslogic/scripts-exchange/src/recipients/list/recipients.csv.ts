
    /*
    Generated by parsecsv.ts

    1. Copy the file to the parent folder

    2. Copy the following snippet into the script class:  
    
  import {inputType} from "./recipients.csv"
  import {room as itemClass} from "@koksmat/schemas"

  const item = itemClass.view
  type targetType = z.infer<typeof item>
  static mapCSV(input:inputType) : targetType {
    const target : targetType = {
    name : input.Name,
primarySmtpAddress : input.PrimarySmtpAddress,
recipientType : input.RecipientType,
recipientTypeDetails : input.RecipientTypeDetails,
emailAddresses : input.EmailAddresses,
whenCreatedUTC : input.WhenCreatedUTC,
    }
    return target;
  }
    */

import { z } from "zod";


  const inputRecord = z.object({


  Name:z.string().trim().openapi({ example: "ca99c3cd-753d-4b7a-9039-84c79bf09149" }),
PrimarySmtpAddress:z.string().trim().openapi({ example: "admin@M365x65867376.OnMicrosoft.com" }),
RecipientType:z.string().trim().openapi({ example: "UserMailbox" }),
RecipientTypeDetails:z.string().trim().openapi({ example: "UserMailbox" }),
EmailAddresses:z.string().trim().openapi({ example: "SPO:SPO_ac91be97-ae5a-4b95-bc34-e10c31b21628@SPO_94d976d7-ec71-41b4-97a8-5074fe65b283 SMTP:admin@M365x65867376.OnMicrosoft.com SIP:admin@m365x65867376.onmicrosoft.com" }),
WhenCreatedUTC:z.string().trim().openapi({ example: "23.03.2023 21:48:36" }),
})

export type inputType = z.infer<typeof inputRecord>


    